@page "/learn/pages/{pageID}"

@inherits BasePage<GetPageQuery, GetPageQueryOut, PageVM, PageTree.Client.Shared.Views.Pages.Page>

@using Corelibs.BlazorShared.UI;
@using Corelibs.BlazorViews.Layouts;
@using Microsoft.JSInterop;
@using PageTree.App.Pages.Queries;

<BackgroundAndContent @ref=@_backgroundOwner Opacity=0.1f>
    <PageTree.Client.Shared.Views.Pages.Page 
        @ref=_view
        Left=@context.Item1 
        Top=@context.Item2 OnPropertyClick=OnPropertyClick 
        IsEditMode=false
        Model=_vm/>
</BackgroundAndContent>

@code {
#if DEBUG
    public const string _pageID = "350b10d0-f72a-4f8f-92a6-5da3b80cac6a";
    public const string _projectID = "8e6458d5-ab4a-4dbd-b845-7727c5b87c9c";
#else
    public const string _pageID = "20caa0c3-243b-47f9-968f-2d6a1e0dd27a";
    public const string _projectID = "---";
#endif

    [Parameter] public string PageID { get; set; }

    protected override Task OnInitializedAsync()
    {
        _navigation.LocationChanged += OnLocationChanged;

        return base.OnInitializedAsync();
    }

    private Task OnPropertyClick(TreeLayout.TreeNode property)
    {
        PageID = property.Identity.ID;
        _navigation.NavigateTo($"learn/pages/{property.Identity.ID}");

        return Task.CompletedTask;
    }

    private async void OnLocationChanged(object sender, LocationChangedEventArgs args)
    {
        await RefreshView();
    }

    protected override string QueryParameter => PageID;
}
