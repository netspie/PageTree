@using Corelibs.BlazorViews.Components
@using Corelibs.BlazorViews.Layouts;
@using PageTree.Client.Shared.Extensions;

<div class="page" style=@_mainStyle>
    
    @{
        bool hasParent = Model.Path.Any();

        <PageEditMenu
            NavigateUpAllowed=NavigateUpAllowed
            HasParent=hasParent
            IsEditMode=IsEditMode
            OnNavigateUp=OnNavigateUp
            OnAddSubPageOnTop=OnAddSubPageOnTop 
            OnAddSubPageOnBottom=OnAddSubPageOnBottom 
            OnAddLinkOnTop=OnCreateLinkOnTopInternal
            OnAddLinkOnBottom=OnCreateLinkOnBottomInternal />
    }

    <PageMenu OnArrangmentsButton=@OnArrangmentsButton IsEditMode=IsEditMode />

    @if (IsEditMode)
    {
        var signaturesOptions = Model.Signatures.ToUIIdentityVM();
        <ChooseFromListWindow Options=signaturesOptions @ref=_signatureChangeWindow OnSelected=OnResignatureSignatureSelected />

        <ChooseFromListWindow @ref=_movePropertyDownWindow OnSelected=OnMoveLevelDownOptionSelected />

        var templatesOptions = Model.Templates.ToUIIdentityVM();
        <ChooseFromListWindow Options=templatesOptions @ref=_chooseTemplateWindow OnSelected=OnChooseTemplateOptionSelected />

        <SelectLinkWindow @ref=_selectLinkWindow OnInputChanged=OnSelectLinkInputChanged OnSelected=OnSelectLinkSelected />
    }
    <PageHeader Model=@GetPageHeader() OnPathElementClick=OnPathElementClick IsEditMode=IsEditMode OnNameChanged=@(name => OnPageNameChanged?.Invoke(Model.Identity.ID, name)) />
    <TreeLayout @ref=_treeLayout Tree=_treeNode BeforeExpand=BeforeExpand AfterExpand=AfterExpand ModifyNode=ModifyNode />
    <Arrangements @ref=@_arrangements OnAddNewClick=@OnAddNewArrangmentClick IsEditMode=IsEditMode/>

    @if (IsEditMode)
    {
        <Arrangements_AddNew @ref=@_arrangements_AddNew Properties=_properties />
    }
</div>
